name: SDK Build Actions

on:
  push:
    branches: [main]
  pull_request:
  workflow_call:
    inputs:
      version_override:
        type: string
        description: "The version to release. If not specified, the version will be inferred"
        required: false
        default: ""
      bump_version:
        type: boolean
        description: "Whether to automatically bump and commit the version after the release"
        required: true
        default: true

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build-package-macos-latest:
    name: "Build Package"
    runs-on: macos-13
    strategy:
      matrix:
        xcode:
          - "14.2" # Swift 5.7
          - "14.3" # Swift 5.8
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup
        with:
          xcode: ${{ matrix.xcode }}
      - name: Build Package
        run: bundle exec rake build:package:all

  # build-example:
  #   name: "Build Example App"
  #   runs-on: macos-13
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3
  #     - name: Setup environment
  #       run: bundle install
  #     - name: Install SSH key
  #       uses: shimataro/ssh-key-action@v2
  #       with:
  #         key: ${{ secrets.CI_SSH_KEY }}
  #         known_hosts: ${{ secrets.KNOWN_HOSTS }}
  #     - name: Write Smile Config
  #       id: write_smile_config
  #       # Mask the config so it doesn't show up in the logs
  #       run: |
  #         INPUT_SMILE_CONFIG=$(jq -r '.inputs.smile_config // empty' $GITHUB_EVENT_PATH)
  #         echo "::add-mask::$INPUT_SMILE_CONFIG"
  #         if [ -n "$INPUT_SMILE_CONFIG" ]; then
  #           SMILE_CONFIG="$INPUT_SMILE_CONFIG"
  #         else
  #           SMILE_CONFIG="$SMILE_CONFIG_PARTNER_002"
  #         fi
  #         echo "$SMILE_CONFIG" > smile_config.json
  #         PARTNER_ID=$(jq -r '.partner_id' smile_config.json)
  #         echo "partner_id=$PARTNER_ID" >> $GITHUB_OUTPUT
  #       env:
  #         SMILE_CONFIG_PARTNER_002: ${{ secrets.SMILE_CONFIG_PARTNER_002 }}
  #     - name: Add Smile Config to Xcode Project
  #       run: ruby add_smile_config.rb
  #     - uses: ./.github/actions/setup
  #     - name: Build Example
  #       run: bundle exec rake build:example:all

  test-package:
    name: "Test Package"
    runs-on: macos-13
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup
        with:
          xcode: "14.3" # Swift 5.8
      - name: Test Package
        run: bundle exec rake test:package
      - name: Process test artifacts
        if: always()
        run: bundle exec rake test:process
      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: TestArtifacts
          path: Tests/Artifacts

  cocoapod:
    name: "Lint CocoaPods podspec"
    runs-on: macos-13
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup
        with:
          install-mint: false
      - name: Lint CocoaPod Podspec
        run: bundle exec rake lint:podspec

  spm:
    name: "Test Swift Package Manager support"
    runs-on: macos-13
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup
        with:
          install-mint: true
      - name: Test Swift Package Manager support
        run: bundle exec rake test:spm

  build-xcframework:
    name: "Build XCFramework"
    runs-on: macos-13
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup
        with:
          install-mint: true
          # XCFrameworks are forwards-compatible but not backwards-compatible.
          # The Xcode version we use for this job is that oldest Xcode version that
          # will be able to use these XCFrameworks and the Smile ID spm package.
          xcode: "14.2" # Swift 5.7
      - name: Build XCFramework
        run: bundle exec rake build:xcframework
