name: SDK Build Actions

on:
  push:
    branches: [ main ]
  pull_request:
  workflow_call:
    inputs:
      version_override:
        type: string
        description: 'The version to release. If not specified, the version will be inferred'
        required: false
        default: ''
      bump_version:
        type: boolean
        description: 'Whether to automatically bump and commit the version after the release'
        required: true
        default: true

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
  FASTLANE_USER: ${{ secrets.FASTLANE_USER }}
  ISSUER_ID: ${{ secrets.ISSUER_ID }}
  KEY_ID: ${{ secrets.KEY_ID }}
  APPSTORE_CONNECT_PRIVATE_KEY: ${{ secrets.APPSTORE_CONNECT_PRIVATE_KEY }}
  FASTLANE_XCODEBUILD_SETTINGS_TIMEOUT: 10

jobs:  
  
  lint-package:
    name: "Lint Package"
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v3
      - name: Danger
        uses: docker://ghcr.io/danger/danger-swift-with-swiftlint:3.15.0
        with:
          args: --failOnErrors --no-publish-check
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-example:
    name: "Build App and Run Unit Tests"
    runs-on: macos-latest
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup environment
        run: bundle install
      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.CI_SSH_KEY }}
          known_hosts: ${{ secrets.KNOWN_HOSTS }}
      - name: Write Smile Config
        id: write_smile_config
        # Mask the config so it doesn't show up in the logs
        run: |
          INPUT_SMILE_CONFIG=$(jq -r '.inputs.smile_config // empty' $GITHUB_EVENT_PATH)
          echo "::add-mask::$INPUT_SMILE_CONFIG"
          if [ -n "$INPUT_SMILE_CONFIG" ]; then
            SMILE_CONFIG="$INPUT_SMILE_CONFIG"
          else
            SMILE_CONFIG="$SMILE_CONFIG_PARTNER_002"
          fi
          echo "$SMILE_CONFIG" > smile_config.json
          PARTNER_ID=$(jq -r '.partner_id' smile_config.json)
          echo "partner_id=$PARTNER_ID" >> $GITHUB_OUTPUT
        env:
          SMILE_CONFIG_PARTNER_002: ${{ secrets.SMILE_CONFIG_PARTNER_002 }}
      - name: Add Smile Config to Xcode Project
        run: ruby add_smile_config.rb
      - uses: ./.github/actions/setup
        with:
          xcode: '14.2'
      - name: Build Example app and Run Unit Tests
        run: |
          bundle exec rake provision:ios
          bundle exec rake test:package